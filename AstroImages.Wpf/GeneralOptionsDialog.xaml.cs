using System.Windows;

namespace AstroImages.Wpf
{
    /// <summary>
    /// Dialog window for configuring general application options and preferences.
    /// This is a modal dialog that allows users to change settings like column visibility.
    /// 
    /// Key WPF Dialog Concepts:
    /// - Inherits from Window but used as a dialog (modal popup)
    /// - Uses DialogResult to indicate OK/Cancel outcome
    /// - Owner property makes it appear on top of parent window
    /// - ShowDialog() makes it modal (blocks interaction with parent)
    /// </summary>
    public partial class GeneralOptionsDialog : Window
    {
        /// <summary>
        /// Property to track whether the file size column should be shown in the main ListView.
        /// This is a simple auto-property that stores the user's preference.
        /// The dialog reads this value on creation and updates it based on user input.
        /// </summary>
        public bool ShowSizeColumn { get; set; }

        /// <summary>
        /// Default constructor - creates the dialog with default settings.
        /// This constructor is required for XAML support and is called by other constructors.
        /// 
        /// The "partial" keyword means this class is split between this .cs file and
        /// the auto-generated code from GeneralOptionsDialog.xaml.
        /// </summary>
        public GeneralOptionsDialog()
        {
            // Initialize all the UI components defined in the XAML file
            // This method is auto-generated by WPF from the XAML markup
            InitializeComponent();
        }

        /// <summary>
        /// Constructor that initializes the dialog with a specific ShowSizeColumn value.
        /// This is typically used when the dialog is opened from the main application
        /// to show the current setting state.
        /// 
        /// The ": this()" syntax is called constructor chaining - it means "first call 
        /// the default constructor, then execute this constructor's code."
        /// This ensures InitializeComponent() is always called first.
        /// </summary>
        /// <param name="showSizeColumn">Current value of the ShowSizeColumn setting</param>
        public GeneralOptionsDialog(bool showSizeColumn) : this()
        {
            // Store the initial value in our property
            ShowSizeColumn = showSizeColumn;
            
            // Set the checkbox state to match the current setting
            // ShowSizeColumnCheckBox is a UI control defined in the XAML file
            ShowSizeColumnCheckBox.IsChecked = showSizeColumn;
        }

        /// <summary>
        /// Event handler for the OK button click.
        /// This method is called when the user clicks the OK button to accept their changes.
        /// 
        /// WPF Event Handler Pattern:
        /// - sender: The UI element that triggered the event (the OK button)
        /// - e: Event arguments containing additional information about the event
        /// - Method names typically follow the pattern: ElementName_EventName
        /// </summary>
        /// <param name="sender">The button that was clicked</param>
        /// <param name="e">Event arguments for the click event</param>
        private void Ok_Click(object sender, RoutedEventArgs e)
        {
            // Read the current checkbox state and store it in our property
            // The ?? operator means "if left side is null, use right side"
            // IsChecked is nullable bool (bool?) so it can be true, false, or null
            ShowSizeColumn = ShowSizeColumnCheckBox.IsChecked ?? false;
            
            // Set DialogResult to true to indicate user clicked OK
            // This is how modal dialogs communicate their outcome to the caller
            DialogResult = true;
            
            // Close the dialog window
            // The calling code can check DialogResult to see if user clicked OK or Cancel
            Close();
        }

        /// <summary>
        /// Event handler for the Cancel button click.
        /// This method is called when the user clicks Cancel to discard their changes.
        /// 
        /// Cancel Pattern in Dialogs:
        /// - Set DialogResult to false to indicate user cancelled
        /// - Don't update any properties - leave them as they were
        /// - Close the dialog immediately
        /// </summary>
        /// <param name="sender">The button that was clicked (Cancel button)</param>
        /// <param name="e">Event arguments for the click event</param>
        private void Cancel_Click(object sender, RoutedEventArgs e)
        {
            // Set DialogResult to false to indicate user cancelled
            // The calling code can check this to know whether to apply changes
            DialogResult = false;
            
            // Close the dialog window without saving any changes
            Close();
        }
    } // End of GeneralOptionsDialog class
} // End of AstroImages.Wpf namespace